<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog</title>
    <link>/</link>
    <description>Recent content on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 16 Aug 2020 08:50:11 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concurrency vs Parallelism</title>
      <link>/post/conc-vs-para/</link>
      <pubDate>Sun, 16 Aug 2020 08:50:11 +0800</pubDate>
      
      <guid>/post/conc-vs-para/</guid>
      <description> Concurrency is about dealing with lots of things at once. Parallelism is about doing lots of things at once. Concurrency is about structure, parallelism is about execution. Concurrency provides a way to structure a solution to solve a problem that may (but not necessarily) be parallelizable. Concurrency is a way to structure a program by breaking it into pieces that can be executed independently. from Rob Pike. Reference: https://talks.golang.org/2012/waza.slide  </description>
    </item>
    
  </channel>
</rss>