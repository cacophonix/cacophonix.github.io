<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on blog</title>
    <link>/post/</link>
    <description>Recent content in Posts on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 17 Aug 2020 06:20:38 +0800</lastBuildDate><atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go Html Templates</title>
      <link>/post/go-templates/</link>
      <pubDate>Mon, 17 Aug 2020 06:20:38 +0800</pubDate>
      
      <guid>/post/go-templates/</guid>
      <description>Go provides some nice feature for templating. Even this very blog is powered by go-hugo which is built on top of go templates. One of the advantage of go template is preventing Code injection. go assumes that whoever writes the templates is trustworthy and whoever provides the data is not.</description>
    </item>
    
    <item>
      <title>Concurrency vs Parallelism</title>
      <link>/post/conc-vs-para/</link>
      <pubDate>Sun, 16 Aug 2020 08:50:11 +0800</pubDate>
      
      <guid>/post/conc-vs-para/</guid>
      <description> Concurrency is about dealing with lots of things at once. Parallelism is about doing lots of things at once. Concurrency is about structure, parallelism is about execution. Concurrency provides a way to structure a solution to solve a problem that may (but not necessarily) be parallelizable. Concurrency is a way to structure a program by breaking it into pieces that can be executed independently. from Rob Pike. Reference: https://talks.golang.org/2012/waza.slide  </description>
    </item>
    
    <item>
      <title>cpp split string</title>
      <link>/post/cpp-split-string/</link>
      <pubDate>Sun, 16 Aug 2020 08:50:11 +0800</pubDate>
      
      <guid>/post/cpp-split-string/</guid>
      <description>test</description>
    </item>
    
  </channel>
</rss>
